!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AmqpGate	external/justice/contact_gate.go	/^type AmqpGate struct {$/;"	t
Broker	external/justice/broker.go	/^type Broker struct {$/;"	t
Citizen	external/core/domain/citizen.go	/^type Citizen struct {$/;"	t
CitizenRepository	external/adapter/storage/sqlite/repository/citizen.go	/^type CitizenRepository struct {$/;"	t
CitizenRepository	external/core/port/citizen.go	/^type CitizenRepository interface {$/;"	t
CitizenService	external/core/port/citizen.go	/^type CitizenService interface {$/;"	t
CitizenService	external/core/service/citizen.go	/^type CitizenService struct {$/;"	t
Close	external/justice/broker.go	/^func (b *Broker) Close() error {$/;"	f
Config	external/justice/config.go	/^type Config struct {$/;"	t
Contact	external/core/domain/contact.go	/^type Contact struct {$/;"	t
ContactRepository	external/adapter/storage/sqlite/repository/contact.go	/^type ContactRepository struct {$/;"	t
ContactRepository	external/core/port/contact.go	/^type ContactRepository interface {$/;"	t
ContactService	external/core/port/contact.go	/^type ContactService interface {$/;"	t
ContactService	external/core/service/contact.go	/^type ContactService struct {$/;"	t
CreateHandleLaterLetter	external/core/service/letter.go	/^func (ls *LetterService) CreateHandleLaterLetter(letter *domain.Letter) (*domain.Letter, error) {$/;"	f
CreateLetter	external/adapter/storage/sqlite/repository/letter.go	/^func (lt *LetterRepository) CreateLetter(letter *domain.Letter, tableName string) (*domain.Letter, error) {$/;"	f
CreateReceivedLetter	external/core/service/letter.go	/^func (ls *LetterService) CreateReceivedLetter(letter *domain.Letter) (*domain.Letter, error) {$/;"	f
CreateResponseLaterLetter	external/core/service/letter.go	/^func (ls *LetterService) CreateResponseLaterLetter(letter *domain.Letter) (*domain.Letter, error) {$/;"	f
CreateSentLetter	external/core/service/letter.go	/^func (ls *LetterService) CreateSentLetter(letter *domain.Letter) (*domain.Letter, error) {$/;"	f
DB	external/adapter/config/config.go	/^type DB struct {$/;"	t
DeleteHandleLaterLetter	external/core/service/letter.go	/^func (ls *LetterService) DeleteHandleLaterLetter(letter *domain.Letter) (*domain.Letter, error) {$/;"	f
DeleteLetter	external/adapter/storage/sqlite/repository/letter.go	/^func (lt *LetterRepository) DeleteLetter(letter *domain.Letter, tableName string) (*domain.Letter, error) {$/;"	f
DeleteReceivedLetter	external/core/service/letter.go	/^func (ls *LetterService) DeleteReceivedLetter(letter *domain.Letter) (*domain.Letter, error) {$/;"	f
DeleteResponseLaterLetter	external/core/service/letter.go	/^func (ls *LetterService) DeleteResponseLaterLetter(letter *domain.Letter) (*domain.Letter, error) {$/;"	f
DeleteSentLetter	external/core/service/letter.go	/^func (ls *LetterService) DeleteSentLetter(letter *domain.Letter) (*domain.Letter, error) {$/;"	f
GetCitizenById	external/adapter/storage/sqlite/repository/citizen.go	/^func (cr *CitizenRepository) GetCitizenById(id uint64) (*domain.Citizen, error) {$/;"	f
GetCitizenById	external/core/service/citizen.go	/^func (cs *CitizenService) GetCitizenById(id uint64) (*domain.Citizen, error) {$/;"	f
GetContactByCitizenId	external/adapter/storage/sqlite/repository/contact.go	/^func (cr *ContactRepository) GetContactByCitizenId(id uint64) (*domain.Contact, error) {$/;"	f
GetContactByCitizenId	external/core/service/contact.go	/^func (cs *ContactService) GetContactByCitizenId(contactId uint64) (*domain.Contact, error) {$/;"	f
GetHandleLaterLetterById	external/core/service/letter.go	/^func (ls *LetterService) GetHandleLaterLetterById(id uint64) (*domain.Letter, error) {$/;"	f
GetLetterById	external/adapter/storage/sqlite/repository/letter.go	/^func (lt *LetterRepository) GetLetterById(id uint64, tableName string) (*domain.Letter, error) {$/;"	f
GetReceivedLetterById	external/core/service/letter.go	/^func (ls *LetterService) GetReceivedLetterById(id uint64) (*domain.Letter, error) {$/;"	f
GetResponseLaterLetterById	external/core/service/letter.go	/^func (ls *LetterService) GetResponseLaterLetterById(id uint64) (*domain.Letter, error) {$/;"	f
GetSentLetterById	external/core/service/letter.go	/^func (ls *LetterService) GetSentLetterById(id uint64) (*domain.Letter, error) {$/;"	f
Letter	external/core/domain/letter.go	/^type Letter struct {$/;"	t
LetterRepository	external/adapter/storage/sqlite/repository/letter.go	/^type LetterRepository struct {$/;"	t
LetterRepository	external/core/port/letter.go	/^type LetterRepository interface {$/;"	t
LetterService	external/core/port/letter.go	/^type LetterService interface {$/;"	t
LetterService	external/core/service/letter.go	/^type LetterService struct {$/;"	t
ListAllCitizens	external/adapter/storage/sqlite/repository/citizen.go	/^func (cr *CitizenRepository) ListAllCitizens() ([]*domain.Citizen, error) {$/;"	f
ListAllCitizens	external/core/service/citizen.go	/^func (cs *CitizenService) ListAllCitizens() ([]*domain.Citizen, error) {$/;"	f
ListAllContacts	external/adapter/storage/sqlite/repository/contact.go	/^func (cr *ContactRepository) ListAllContacts() ([]*domain.Contact, error) {$/;"	f
ListAllContacts	external/core/service/contact.go	/^func (cs *ContactService) ListAllContacts() ([]*domain.Contact, error) {$/;"	f
New	external/adapter/config/config.go	/^func New() (*DB, error) {$/;"	f
New	external/adapter/storage/sqlite/db.go	/^func New(config *config.DB) (*sql.DB, error) {$/;"	f
NewBroker	external/justice/broker.go	/^func NewBroker(cfg *Config) (*Broker, error) {$/;"	f
NewCitizenRepository	external/adapter/storage/sqlite/repository/citizen.go	/^func NewCitizenRepository(db *sql.DB) *CitizenRepository {$/;"	f
NewCitizenService	external/core/service/citizen.go	/^func NewCitizenService(rp port.CitizenRepository) *CitizenService {$/;"	f
NewConfig	external/justice/config.go	/^func NewConfig() (*Config, error) {$/;"	f
NewContactRepository	external/adapter/storage/sqlite/repository/contact.go	/^func NewContactRepository(db *sql.DB) *ContactRepository {$/;"	f
NewContactService	external/core/service/contact.go	/^func NewContactService(rp port.ContactRepository) *ContactService {$/;"	f
NewLetterRepository	external/adapter/storage/sqlite/repository/letter.go	/^func NewLetterRepository(db *sql.DB) *LetterRepository {$/;"	f
NewLetterService	external/core/service/letter.go	/^func NewLetterService(lr port.LetterRepository) *LetterService {$/;"	f
SendLetter	external/justice/contact_gate.go	/^func (g *AmqpGate) SendLetter(msg []byte) error {$/;"	f
TestCreateHandleLaterLetterById	external/core/service/letter_test.go	/^func TestCreateHandleLaterLetterById(t *testing.T) {$/;"	f
TestCreateReceivedLetterById	external/core/service/letter_test.go	/^func TestCreateReceivedLetterById(t *testing.T) {$/;"	f
TestCreateResponseLaterLetterById	external/core/service/letter_test.go	/^func TestCreateResponseLaterLetterById(t *testing.T) {$/;"	f
TestCreateSentLetterById	external/core/service/letter_test.go	/^func TestCreateSentLetterById(t *testing.T) {$/;"	f
TestDeleteHandleLaterLetter	external/core/service/letter_test.go	/^func TestDeleteHandleLaterLetter(t *testing.T) {$/;"	f
TestDeleteReceivedLetter	external/core/service/letter_test.go	/^func TestDeleteReceivedLetter(t *testing.T) {$/;"	f
TestDeleteResponseLaterLetter	external/core/service/letter_test.go	/^func TestDeleteResponseLaterLetter(t *testing.T) {$/;"	f
TestDeleteSentLetter	external/core/service/letter_test.go	/^func TestDeleteSentLetter(t *testing.T) {$/;"	f
TestGetCitizenById	external/core/service/citizen_test.go	/^func TestGetCitizenById(t *testing.T) {$/;"	f
TestGetContactById	external/core/service/contact_test.go	/^func TestGetContactById(t *testing.T) {$/;"	f
TestGetHandleLaterLetterById	external/core/service/letter_test.go	/^func TestGetHandleLaterLetterById(t *testing.T) {$/;"	f
TestGetReceivedLetterById	external/core/service/letter_test.go	/^func TestGetReceivedLetterById(t *testing.T) {$/;"	f
TestGetResponseLaterLetterById	external/core/service/letter_test.go	/^func TestGetResponseLaterLetterById(t *testing.T) {$/;"	f
TestGetSentLetterById	external/core/service/letter_test.go	/^func TestGetSentLetterById(t *testing.T) {$/;"	f
TestListAllCitizens	external/core/service/citizen_test.go	/^func TestListAllCitizens(t *testing.T) {$/;"	f
TestListAllContacts	external/core/service/contact_test.go	/^func TestListAllContacts(t *testing.T) {$/;"	f
TestUpdateHandleLaterLetter	external/core/service/letter_test.go	/^func TestUpdateHandleLaterLetter(t *testing.T) {$/;"	f
TestUpdateReceivedLetter	external/core/service/letter_test.go	/^func TestUpdateReceivedLetter(t *testing.T) {$/;"	f
TestUpdateResponseLaterLetter	external/core/service/letter_test.go	/^func TestUpdateResponseLaterLetter(t *testing.T) {$/;"	f
TestUpdateSentLetter	external/core/service/letter_test.go	/^func TestUpdateSentLetter(t *testing.T) {$/;"	f
UpdateHandleLaterLetter	external/core/service/letter.go	/^func (ls *LetterService) UpdateHandleLaterLetter(letter *domain.Letter) (*domain.Letter, error) {$/;"	f
UpdateLetter	external/adapter/storage/sqlite/repository/letter.go	/^func (lt *LetterRepository) UpdateLetter(letter *domain.Letter, tableName string) (*domain.Letter, error) {$/;"	f
UpdateReceivedLetter	external/core/service/letter.go	/^func (ls *LetterService) UpdateReceivedLetter(letter *domain.Letter) (*domain.Letter, error) {$/;"	f
UpdateResponseLaterLetter	external/core/service/letter.go	/^func (ls *LetterService) UpdateResponseLaterLetter(letter *domain.Letter) (*domain.Letter, error) {$/;"	f
UpdateSentLetter	external/core/service/letter.go	/^func (ls *LetterService) UpdateSentLetter(letter *domain.Letter) (*domain.Letter, error) {$/;"	f
citizens	external/adapter/storage/sqlite/migrations/000001_create_relationship_table.up.sql	/^CREATE TABLE citizens ($/;"	t
citizens.citizens_index_on_id	external/adapter/storage/sqlite/migrations/000001_create_relationship_table.up.sql	/^CREATE UNIQUE INDEX citizens_index_on_id ON citizens (id);$/;"	i
citizens.contact_gate	external/adapter/storage/sqlite/migrations/000001_create_relationship_table.up.sql	/^    contact_gate VARCHAR(32) NOT NULL,$/;"	F
citizens.id	external/adapter/storage/sqlite/migrations/000001_create_relationship_table.up.sql	/^    id INTEGER PRIMARY KEY AUTOINCREMENT,$/;"	F
citizens.name	external/adapter/storage/sqlite/migrations/000001_create_relationship_table.up.sql	/^    name VARCHAR(255) NOT NULL,$/;"	F
citizens.registration_date	external/adapter/storage/sqlite/migrations/000001_create_relationship_table.up.sql	/^    registration_date INTEGER NOT NULL$/;"	F
config	external/adapter/config/config.go	/^package config$/;"	p
contacts	external/adapter/storage/sqlite/migrations/000002_create_contacts_table.up.sql	/^CREATE TABLE contacts ($/;"	t
contacts.citizen_id	external/adapter/storage/sqlite/migrations/000002_create_contacts_table.up.sql	/^  citizen_id INTEGER NOT NULL,$/;"	F
contacts.contacts_index_on_citizen_id	external/adapter/storage/sqlite/migrations/000002_create_contacts_table.up.sql	/^CREATE UNIQUE INDEX contacts_index_on_citizen_id ON contacts (citizen_id);$/;"	i
contacts.permission	external/adapter/storage/sqlite/migrations/000002_create_contacts_table.up.sql	/^  permission INTEGER NOT NULL$/;"	F
domain	external/core/domain/citizen.go	/^package domain$/;"	p
domain	external/core/domain/contact.go	/^package domain$/;"	p
domain	external/core/domain/letter.go	/^package domain$/;"	p
justice	external/justice/broker.go	/^package justice$/;"	p
justice	external/justice/config.go	/^package justice$/;"	p
justice	external/justice/contact_gate.go	/^package justice$/;"	p
letters	external/adapter/storage/sqlite/migrations/000003_create_letters_table.up.sql	/^CREATE TABLE letters ($/;"	t
letters.code	external/adapter/storage/sqlite/migrations/000003_create_letters_table.up.sql	/^  code INTEGER NOT NULL,$/;"	F
letters.commit_time	external/adapter/storage/sqlite/migrations/000003_create_letters_table.up.sql	/^  commit_time INTEGER NOT NULL,$/;"	F
letters.foreign_id	external/adapter/storage/sqlite/migrations/000003_create_letters_table.up.sql	/^  foreign_id INTEGER NOT NULL, $/;"	F
letters.id	external/adapter/storage/sqlite/migrations/000003_create_letters_table.up.sql	/^  id INTEGER PRIMARY KEY AUTOINCREMENT,$/;"	F
letters.letters_index_on_code_foreign_id_commit_time	external/adapter/storage/sqlite/migrations/000003_create_letters_table.up.sql	/^CREATE UNIQUE INDEX letters_index_on_code_foreign_id_commit_time ON letters (code, foreign_id, commit_time);$/;"	i
letters.letters_index_on_id	external/adapter/storage/sqlite/migrations/000003_create_letters_table.up.sql	/^CREATE UNIQUE INDEX letters_index_on_id ON letters (id);$/;"	i
letters.message	external/adapter/storage/sqlite/migrations/000003_create_letters_table.up.sql	/^  message BLOB NOT NULL,$/;"	F
main	main.go	/^func main() {$/;"	f
main	main.go	/^package main$/;"	p
port	external/core/port/citizen.go	/^package port$/;"	p
port	external/core/port/contact.go	/^package port$/;"	p
port	external/core/port/letter.go	/^package port$/;"	p
repository	external/adapter/storage/sqlite/repository/citizen.go	/^package repository$/;"	p
repository	external/adapter/storage/sqlite/repository/contact.go	/^package repository$/;"	p
repository	external/adapter/storage/sqlite/repository/letter.go	/^package repository$/;"	p
service	external/core/service/citizen.go	/^package service$/;"	p
service	external/core/service/citizen_test.go	/^package service$/;"	p
service	external/core/service/contact.go	/^package service$/;"	p
service	external/core/service/contact_test.go	/^package service$/;"	p
service	external/core/service/letter.go	/^package service$/;"	p
service	external/core/service/letter_test.go	/^package service$/;"	p
sqlite	external/adapter/storage/sqlite/db.go	/^package sqlite$/;"	p
